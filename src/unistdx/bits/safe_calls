/*
   Copyright 2017 Ivan Gankevich

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/

#ifndef UNISTDX_BITS_SAFE_CALLS
#define UNISTDX_BITS_SAFE_CALLS

#include <fcntl.h>
#include <mutex>

namespace sys {

	namespace bits {

		typedef std::mutex global_mutex_type;
		typedef std::lock_guard<global_mutex_type> global_lock_type;

		extern global_mutex_type __forkmutex;

		inline void
		set_mandatory_flags(int fd) noexcept {
			::fcntl(fd, F_SETFD, O_CLOEXEC);
			::fcntl(fd, F_SETFL, O_NONBLOCK);
		}

	}

}

#endif // vim:filetype=cpp
