/*
   Copyright 2017 Ivan Gankevich

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/

#ifndef UNISTDX_FS_ODIRTREE
#define UNISTDX_FS_ODIRTREE

#include <unistdx/fs/idirtree>
#include <unistdx/fs/idirectory>
#include <unistdx/fs/odirectory>

namespace sys {

	template <class Trans>
	using basic_odirtree = basic_odirectory<Trans>;

	struct copy_recursively {

		path _src;
		path _dest;

		inline sys::path
		operator()(const direntry& rhs) const {
			return sys::path(rhs.name());
		}

		inline sys::path
		operator()(const pathentry& rhs) const {
			return this->make_dirs(rhs.getpath());
		}

		inline sys::path
		operator()(const file& rhs) const {
			return this->make_dirs(rhs);
		}

	private:
		sys::path
		make_dirs(const sys::path& rhs) const;

	};

	typedef basic_odirtree<copy_recursively> odirtree;
	template<class T>
	using odirtree_iterator = basic_ostream_iterator<odirtree, T>;

}

#endif // vim:filetype=cpp
