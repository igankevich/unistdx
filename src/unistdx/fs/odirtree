#ifndef UNISTDX_FS_ODIRTREE
#define UNISTDX_FS_ODIRTREE

#include <unistdx/fs/idirtree>
#include <unistdx/fs/idirectory>
#include <unistdx/fs/odirectory>

namespace sys {

	template <class Trans>
	using basic_odirtree = basic_odirectory<Trans>;

	struct copy_recursively {

		path _src;
		path _dest;

		inline sys::path
		operator()(const direntry& rhs) const {
			return sys::path(rhs.name());
		}

		inline sys::path
		operator()(const pathentry& rhs) const {
			return this->make_dirs(rhs.getpath());
		}

	private:
		sys::path
		make_dirs(const sys::path& rhs) const;

	};

	typedef basic_odirtree<copy_recursively> odirtree;
	template<class T>
	using odirtree_iterator = basic_ostream_iterator<odirtree, T>;

}

#endif // vim:filetype=cpp
