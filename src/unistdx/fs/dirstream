/*
   Copyright 2017 Ivan Gankevich

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/

#ifndef UNISTDX_FS_DIRSTREAM
#define UNISTDX_FS_DIRSTREAM

namespace sys {

	class dirstream {

	protected:
		dirstream() = default;
		dirstream(const dirstream&) = default;
		dirstream(dirstream&&) = default;
		~dirstream() = default;

	public:
		enum state {
			goodbit = 0,
			failbit = 1,
			badbit = 2,
			eofbit = 4
		};

		inline explicit
		operator bool() const noexcept {
			return !this->_state;
		}

		inline bool
		operator!() const noexcept {
			return !operator bool();
		}

		inline void
		clear() noexcept {
			this->_state = goodbit;
		}

		inline bool
		good() const noexcept {
			return !this->_state;
		}

		inline bool
		bad() const noexcept {
			return this->_state & badbit;
		}

		inline bool
		fail() const noexcept {
			return this->_state & failbit;
		}

		inline bool
		eof() const noexcept {
			return this->_state & eofbit;
		}

		inline state
		rdstate() const noexcept {
			return this->_state;
		}

		inline void
		setstate(state rhs) noexcept {
			this->_state = state(this->_state | rhs);
		}

	protected:

		state _state = goodbit;

	};

}

#endif // vim:filetype=cpp
