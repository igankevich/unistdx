/*
   Copyright 2017 Ivan Gankevich

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/

#ifndef UNISTDX_FS_DIRECTORY
#define UNISTDX_FS_DIRECTORY

#include <unistdx/fs/idirectory>
#include <unistdx/fs/odirectory>

namespace sys {

	template<class FilePred, class Trans>
	class basic_directory:
		public basic_idirectory<FilePred>,
		public basic_odirectory<Trans> {

	public:

		typedef basic_idirectory<FilePred> idir_type;
		typedef basic_odirectory<Trans> odir_type;

		using typename idir_type::filepred_type;
		using typename odir_type::transform;

		inline void
		open(const path& p) {
			this->idir_type::open(p);
			this->odir_type::open(p);
		}

		inline void
		close() {
			this->idir_type::close();
		}

		inline const path&
		getpath() const noexcept {
			return this->idir_type::getpath();
		}

		inline explicit
		operator bool() const noexcept {
			return this->idir_type::operator bool() &&
			       this->odir_type::operator bool();
		}

		inline bool
		operator!() const noexcept {
			return !operator bool();
		}

	};

	typedef basic_directory<ignore_hidden_files,copy_verbatim> directory;

}

#endif // vim:filetype=cpp
