/*
   Copyright 2017 Ivan Gankevich

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/

#ifndef UNISTDX_BASE_STREAMBUF_TRAITS
#define UNISTDX_BASE_STREAMBUF_TRAITS

#include <streambuf>

namespace sys {

	template<class T>
	class streambuf_traits {

	public:
		typedef typename T::char_type char_type;

		inline static std::streamsize
		write(T& buf, const char_type* s, std::streamsize n) {
			return buf.sputn(s, n);
		}

		inline static std::streamsize
		read(T& buf, char_type* s, std::streamsize n) {
			return buf.sgetn(s, n);
		}

		inline static bool
		is_blocking(const T&) {
			return false;
		}

		inline static std::streamsize
		in_avail(T& buf) {
			return buf.in_avail();
		}

	};


}

#endif // vim:filetype=cpp
