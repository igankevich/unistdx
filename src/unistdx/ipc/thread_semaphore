/*
   Copyright 2017 Ivan Gankevich

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/

#ifndef UNISTDX_IPC_THREAD_SEMAPHORE
#define UNISTDX_IPC_THREAD_SEMAPHORE

#include <unistdx/ipc/semaphore>

namespace sys {

	#if defined(UNISTDX_HAVE_POSIX_SEMAPHORES) && !defined(__MACH__)
	struct thread_semaphore: public posix_semaphore {
		inline
		thread_semaphore():
		posix_semaphore(semaphore_type::thread)
		{}
	};
	#elif defined(UNISTDX_HAVE_SYSV_SEMAPHORES)
	typedef sysv_semaphore thread_semaphore;
	#else
	typedef std::condition_variable_any thread_semaphore;
	#endif

}

#endif // vim:filetype=cpp
