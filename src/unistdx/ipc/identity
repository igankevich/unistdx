/*
   Copyright 2017 Ivan Gankevich

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/

#ifndef UNISTDX_IPC_IDENTITY
#define UNISTDX_IPC_IDENTITY

#include <sys/types.h>
#include <unistd.h>

#include <unistdx/base/check>

namespace sys {

	typedef ::pid_t pid_type;
	typedef ::uid_t uid_type;
	typedef ::gid_t gid_type;

	inline constexpr uid_type
	superuser() noexcept { return 0; }

	inline constexpr gid_type
	supergroup() noexcept { return 0; }

	namespace this_process {

		inline uid_type
		user() noexcept { return ::getuid(); }

		inline void
		set_user(uid_type rhs) {
			UNISTDX_CHECK(::setuid(rhs));
		}

		inline uid_type
		effective_user() noexcept { return ::geteuid(); }

		inline gid_type
		group() noexcept { return ::getgid(); }

		inline void
		set_group(gid_type rhs) {
			UNISTDX_CHECK(::setgid(rhs));
		}

		inline gid_type
		effective_group() noexcept { return ::getegid(); }

		void
		set_identity(uid_type uid, gid_type gid);

	}

}

#endif // vim:filetype=cpp
