/*
   Copyright 2017 Ivan Gankevich

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/

#ifndef UNISTDX_UTIL_SYSTEM
#define UNISTDX_UTIL_SYSTEM

#include <unistd.h>

/// POSIX and Linux system call wrappers.
namespace sys {

	typedef size_t size_type;

	inline size_type
	page_size() noexcept {
		#if defined(PAGESIZE)
			#define UNISTDX_SYSCONF_PAGE_SIZE PAGESIZE
		#elif defined(PAGE_SIZE)
			#define UNISTDX_SYSCONF_PAGE_SIZE PAGE_SIZE
		#elif defined(_SC_PAGESIZE)
			#define UNISTDX_SYSCONF_PAGE_SIZE _SC_PAGESIZE
		#elif defined(_SC_PAGE_SIZE)
			#define UNISTDX_SYSCONF_PAGE_SIZE _SC_PAGE_SIZE
		#endif
		#if defined(UNISTDX_SYSCONF_PAGE_SIZE)
		long result = ::sysconf(UNISTDX_SYSCONF_PAGE_SIZE);
		return result < 1 ? 4096 : result;
		#else
		return 4096;
		#endif
		#undef UNISTDX_SYSCONF_PAGE_SIZE
	}

	extern unsigned
	thread_concurrency() noexcept;

	inline unsigned
	io_concurrency() noexcept {
		return 1u;
	}

}

#endif // vim:filetype=cpp
