#ifndef UNISTDX_UTIL_USERSTREAM
#define UNISTDX_UTIL_USERSTREAM

#include <unistdx/bits/no_copy_and_move>
#include <unistdx/it/basic_istream_iterator>
#include <unistdx/util/user>

namespace sys {

	/**
	\brief Input stream of system users.
	\date 2018-05-25
	\author Ivan Gankevich
	\ingroup stream
	\see user
	\see user_iterator
	\details
	Useful to traverse all system users in conjunction with
	\link user_iterator\endlink.
	*/
	class userstream {

	private:
		bool _end = false;

	public:

		userstream();

		~userstream();

		UNISTDX_NO_COPY_AND_MOVE(userstream)

		/// Returns true if the end of stream is not reached.
		inline explicit
		operator bool() const noexcept {
			return !this->_end;
		}

		/// Returns true if the end of stream is reached.
		inline bool
		operator!() const noexcept {
			return !this->operator bool();
		}

		/// Read the next user from the stream.
		userstream&
		operator>>(user& rhs);

	};

	/// Iterator for \link userstream\endlink.
	typedef basic_istream_iterator<userstream, user> user_iterator;

}

#endif // vim:filetype=cpp
