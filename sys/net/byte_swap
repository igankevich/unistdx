#ifndef SYS_NET_BYTE_SWAP
#define SYS_NET_BYTE_SWAP

#include <algorithm>
#include <stdx/uint128.hh>
#include <sys/unistdx_config>

namespace sys {

	/// @addtogroup byteswap Byte swap
	/// @brief Compile-time byte swapping functions.
	/// @{
	template<class T>
	inline T
	byte_swap (T n) noexcept {
		union {
			T x;
			unsigned char y[sizeof(T)];
		} tmp;
		tmp.x = n;
		std::reverse(tmp.y, tmp.y + sizeof(T));
		return tmp.x;
	}

	template<>
	inline constexpr uint8_t
	byte_swap<uint8_t>(uint8_t n) noexcept {
		return n;
	}

	template<>
	inline constexpr uint16_t
	byte_swap<uint16_t>(uint16_t n) noexcept {
		#if defined(UNISTDX_HAVE_BUILTIN_SWAP16)
		return __builtin_bswap16(n);
		#else
		return ((n & 0xff00)>>8) | ((n & 0x00ff)<<8);
		#endif
	}

	template<>
	inline constexpr uint32_t
	byte_swap<uint32_t>(uint32_t n) noexcept {
		#if defined(UNISTDX_HAVE_BUILTIN_SWAP32)
		return __builtin_bswap32(n);
		#else
		return ((n & UINT32_C(0xff000000)) >> 24) |
		       ((n & UINT32_C(0x00ff0000)) >> 8) |
		       ((n & UINT32_C(0x0000ff00)) << 8) |
		       ((n & UINT32_C(0x000000ff)) << 24);
		#endif
	}

	template<>
	inline constexpr uint64_t
	byte_swap<uint64_t>(uint64_t n) noexcept {
		#if defined(UNISTDX_HAVE_BUILTIN_SWAP64)
		return __builtin_bswap64(n);
		#else
		return ((n & UINT64_C(0xff00000000000000)) >> 56) |
		       ((n & UINT64_C(0x00ff000000000000)) >> 40) |
		       ((n & UINT64_C(0x0000ff0000000000)) >> 24) |
		       ((n & UINT64_C(0x000000ff00000000)) >> 8) |
		       ((n & UINT64_C(0x00000000ff000000)) << 8) |
		       ((n & UINT64_C(0x0000000000ff0000)) << 24) |
		       ((n & UINT64_C(0x000000000000ff00)) << 40) |
		       ((n & UINT64_C(0x00000000000000ff)) << 56);
		#endif
	}

	template<>
	inline stdx::uint128_t
	byte_swap(stdx::uint128_t x) noexcept {
		union {
			stdx::uint128_t n;
			unsigned char raw[sizeof(stdx::uint128_t)];
		} tmp;
		tmp.n = x;
		std::reverse(tmp.raw, tmp.raw + sizeof(stdx::uint128_t));
		return tmp.n;
	}

	// compile-time unit tests for byte swapping
	static_assert(
		byte_swap<uint16_t>(UINT16_C(0xABCD)) == UINT16_C(0xCDAB),
		"byte swap failed for u16"
	);

	static_assert(
		byte_swap<uint32_t>(UINT32_C(0xABCDDCBA)) == UINT32_C(0xBADCCDAB),
		"byte swap failed for u32"
	);

	static_assert(
		byte_swap<uint64_t>(UINT64_C(0xABCDDCBA12344321)) == UINT64_C(
			0x21433412BADCCDAB
		),
		"byte swap failed for u64"
	);
	/// @}

}

#endif // SYS_NET_BYTE_SWAP vi:ft=cpp
