#ifndef SYS_UTIL_GROUPS
#define SYS_UTIL_GROUPS

#include <grp.h>
#include <sys/types.h>
#include <algorithm>
#include <iterator>
#include <ostream>
#include "cstring_iterator"
#include "intersperse_iterator"
#include <sys/bits/basic_istream_iterator.hh>

namespace sys {

	typedef ::gid_t gid_type;

	struct group: public ::group {

		typedef cstring_iterator<char*> iterator;

		inline const char*
		name() const {
			return this->gr_name;
		}

		inline const char*
		password() const {
			return this->gr_passwd;
		}

		inline gid_type
		id() const {
			return this->gr_gid;
		}

		inline iterator
		begin() const {
			return iterator(this->gr_mem);
		}

		inline iterator
		end() const {
			return iterator();
		}

		inline size_t
		size() const {
			return std::distance(begin(), end());
		}

		inline bool
		operator==(const group& rhs) const noexcept {
			return id() == rhs.id();
		}

		inline bool
		operator!=(const group& rhs) const noexcept {
			return !operator==(rhs);
		}

		friend std::ostream&
		operator<<(std::ostream& out, const group& rhs) {
			out << rhs.name() << ':'
			    << rhs.password() << ':'
			    << rhs.id() << ':';
			std::copy(
				rhs.begin(),
				rhs.end(),
				intersperse_iterator<const char*,char>(out, ',')
			);
			return out;
		}

	};

	static_assert(
		sizeof(group) == sizeof(::group),
		"bad sys::group size"
	);

	struct groupstream {

		inline
		groupstream():
		_end(false) {
			::setgrent();
		}

		inline
		~groupstream() {
			::endgrent();
		}

		inline explicit
		operator bool() const noexcept {
			return !_end;
		}

		inline bool
		operator!() const noexcept {
			return !operator bool();
		}

		inline groupstream&
		operator>>(group& rhs) {
			if (*this) {
				group* g = next_entry();
				if (g == nullptr) {
					_end = true;
				} else {
					rhs = *g;
				}
			}
			return *this;
		}

	private:

		inline static group*
		next_entry() {
			return static_cast<group*>(::getgrent());
		}

		bool _end;

	};

	typedef basic_istream_iterator<groupstream, group> group_iterator;

}

#endif // SYS_UTIL_GROUPS vim:filetype=cpp
