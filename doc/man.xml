<?xml version="1.0" encoding="utf-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

  <xsl:output method="text" />

  <xsl:template match="/"><xsl:apply-templates/></xsl:template>

  <xsl:template match="*">
    <xsl:message terminate="no">WARNING: Unmatched element: <xsl:value-of select="name()"/></xsl:message>
    <xsl:apply-templates/>
  </xsl:template>

  <xsl:template match="doxygen"><xsl:apply-templates/></xsl:template>

  <xsl:template match="doxygen/compounddef">
    <xsl:variable name="fullname" select="concat(compoundname, '::', $memberName)" />
    <xsl:variable name="all_members" select="sectiondef/memberdef[name=$memberName]" />
    <xsl:variable name="brief"  select="$all_members[1]/briefdescription" />
.TH "<xsl:value-of select="$fullname" />" 3 <xsl:value-of select="$lastChanged" /> "Unistdx" "Unistdx API Reference"
.SH NAME
<xsl:value-of select="$fullname" /> \- <xsl:value-of select="normalize-space($brief)" />
<!-- synopsis {{{ -->
.SH SYNOPSIS
.nf
<xsl:for-each select="$all_members">
  <xsl:variable name="pos" select="position()" />
  <xsl:variable name="pos_prev" select="$pos - 1" />
<xsl:if test="location/@file!=$all_members[$pos_prev]/location/@file or $pos=1">

.BR "#include " &lt;<xsl:value-of select="substring-after(location/@file, 'src/')" />&gt;</xsl:if>
.BR <xsl:value-of select="concat('&quot;', normalize-space(type), ' &quot; ', ../../compoundname, '::', name)" />(\c
<xsl:for-each select="param">\c
.BR <xsl:value-of select="concat('&quot;', normalize-space(type), ' &quot; ', declname)" />\c
<xsl:if test="position() != last()">, </xsl:if>\c
</xsl:for-each>\c
)</xsl:for-each>
<!-- }}} -->
.SH DESCRIPTION
.sp
  <xsl:for-each select="$all_members">
.BR <xsl:value-of select="concat('&quot;', normalize-space(type), ' &quot; ', ../../compoundname, '::', name)" />(\c
<xsl:for-each select="param">\c
.BR <xsl:value-of select="concat('&quot;', normalize-space(type), ' &quot; ', declname)" />\c
<xsl:if test="position() != last()">, </xsl:if>\c
</xsl:for-each>\c
)
.fi
.RS
<xsl:value-of select="normalize-space($brief)" />
.RE
<xsl:for-each select="detaileddescription/*/parameterlist/parameteritem">
.RS
.IP "\fB<xsl:value-of select="normalize-space(parameternamelist)" />\fR"
<xsl:value-of select="parameterdescription/para" />
.RE
</xsl:for-each>
<xsl:for-each select="detaileddescription/para/text()">
<xsl:if test="position()=1">
.RS
</xsl:if>
<xsl:variable name="x" select="normalize-space(.)" />
<xsl:if test="$x != ''">
<xsl:value-of select="$x" /></xsl:if>
<xsl:if test="position()=last()">
.RE
</xsl:if>
</xsl:for-each>
<xsl:for-each select="inbodydescription/para/text()">
<xsl:variable name="x" select="normalize-space(.)" />
<xsl:if test="$x != ''">.PP <xsl:value-of select="normalize-space(.)" /></xsl:if>
</xsl:for-each>
  </xsl:for-each>
  </xsl:template>

</xsl:stylesheet>
