#!/bin/sh

CMMSHQ_URL="cmmshq.ru:/srv/unistdx"

export GUIX_MANIFEST=ci/manifest.scm
export GUIX_CHANNELS=ci/channels.scm
export GUIX_SYSTEMS="x86_64-linux i686-linux"

echo
echo "Environment:"
env | grep -E '^(CI_|HOME|SINGULARITY|GUIX)' | sort | column -t -s= -R 1
echo

if test "$CI_BUILD_BRANCH" = "site"
then
    echo "Building the site"
    echo
/usr/libexec/gitbucket-ci << EOF
export UNISTDX_MANIFEST=ci,site
if test "$CI_BUILD_BRANCH" = "site"
then
    d=/tmp/gitbucket-ci-\$(uuidgen)
    slurm_job "doc" sh -c "
        set -ex
        meson . \$d
        cd \$d
        ninja -v doc
        rsync -e 'ssh -p 22222' -acv --delete html/ $CMMSHQ_URL/
        rm -rf \$d
    "
fi
EOF
else
/usr/libexec/gitbucket-ci << EOF
export UNISTDX_MANIFEST=ci,site

test_flags() {
    flags="\$@"
    d=/tmp/gitbucket-ci-\$(uuidgen)
    echo "
        set -ex
        meson \$flags . \$d
        cd \$d
        meson test --verbose
        rm -rf \$d"
}

slurm_job "sanitize-none" sh -c "\$(test_flags -Db_sanitize=none)"

if ! test "\$GUIX_SYSTEM" = "i686-linux"
then
    slurm_job "sanitize-address" sh -c "\$(test_flags -Db_sanitize=address)"
fi

slurm_job "arch-native" sh -c "\$(test_flags -Dbuildtype=release -Dcpp_args=-march=native)"

d=/tmp/gitbucket-ci-\$(uuidgen)
slurm_job "coverage" sh -c "
    set -ex
    meson -Db_coverage=true . \$d
    cd \$d
    meson test --verbose
    ninja -v coverage-text
    cat meson-logs/coverage.txt
    ninja -v test-lcov
    rsync -a lcov/ \$OUTDIR/\$GUIX_SYSTEM-coverage/
"

EOF
fi
